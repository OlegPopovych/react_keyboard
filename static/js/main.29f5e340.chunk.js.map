{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","key","setKey","handleKeySet","event","stopPropagation","useEffect","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAe,SAACC,GACpBA,EAAMC,kBACNH,EAAOE,EAAMH,MAWf,OARAK,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASL,GAE5B,WACLI,SAASE,oBAAoB,QAASN,MAEvC,IAGD,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAG,mCAC4BA,EAD5B,KAEA,+B,MClBZU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.29f5e340.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [key, setKey] = useState('');\n\n  const handleKeySet = (event: KeyboardEvent) => {\n    event.stopPropagation();\n    setKey(event.key);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeySet);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeySet);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {key\n          ? `The last pressed key is [${key}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}