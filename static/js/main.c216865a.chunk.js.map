{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeySet","event","stopPropagation","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAFT,EAaEC,aAAe,SAACC,GACdA,EAAMC,kBACN,EAAKC,SAAS,CAAEJ,IAAKE,EAAMF,OAf/B,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAkBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,IAAX,mCAC+BO,KAAKR,MAAMC,IAD1C,KAEG,kCAxBd,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c216865a.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeySet);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeySet);\n  }\n\n  handleKeySet = (event: KeyboardEvent) => {\n    event.stopPropagation();\n    this.setState({ key: event.key });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}